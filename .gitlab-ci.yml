stages:
  - build
  - test-build
  - test-src
  - deploy

variables:
  GIT_DEPTH: "15"
  KW_PROJECT_NAME: ospray
  ErrorActionPreference: STOP

.job_template: &build_job_docker
  stage: build
  tags:
    - docker
  image: $DOCKER_REGISTRY/ospray/docker-images:arch  # default image
  script:
    - scripts/build_gitlab/linux.sh

.job_template: &build_job_docker_modules
  stage: build
  tags:
    - docker
    - modules
  image: $DOCKER_REGISTRY/ospray/docker-images:centos7-mod
  script:
    - scripts/build_gitlab/linux.sh

.job_template: &build_job_shell
  stage: build
  tags:
    - build

.job_template: &build_artifacts
  artifacts:
    paths:
      - build/install/ospray
    expire_in: 3 day

.job_template: &release_job
  stage: deploy
  tags:
    - release
  dependencies:
    - pdf
  only:
    - devel
    - master
    - /release/

.job_template: &test_job
  stage: test-build
  tags:
    - docker
  artifacts:
    paths:
      - build_regression_tests/tests.xml
      - build_regression_tests/failed
    expire_in: 1 week
    when: always

.job_template: &test_job_unix
  <<: *test_job
  script:
    - LD_LIBRARY_PATH="$CI_PROJECT_DIR/build/install/ospray/lib:$LD_LIBRARY_PATH" PATH="$CI_PROJECT_DIR/build/install/ospray/bin:$PATH" scripts/tests/run_tests.sh "$CI_PROJECT_DIR"

.job_template: &test_job_windows
  <<: *test_job
  script:
    - $env:Path += ";$CI_PROJECT_DIR\build\install\ospray\bin"
    - scripts\tests\run_tests.ps1 "$CI_PROJECT_DIR"


### BUILD JOBS ###

build-arch-gcc:
  <<: *build_job_docker
  script:
    - scripts/build_gitlab/linux.sh -G Ninja -DBUILD_GLFW=OFF

build-arch-clang:
  <<: *build_job_docker
  script:
    - export CC=clang
    - export CXX=clang++
    - scripts/build_gitlab/linux.sh -G Ninja -DBUILD_GLFW=OFF

build-arch-gcc-extras:
  <<: *build_job_docker
  script:
    - scripts/build_gitlab/linux.sh -G Ninja -DBUILD_GLFW=OFF -DBUILD_OSPRAY_CI_EXTRAS=ON -DBUILD_OIDN=ON

build-arch-clang-extras:
  <<: *build_job_docker
  script:
    - export CC=clang
    - export CXX=clang++
    - scripts/build_gitlab/linux.sh -G Ninja -DBUILD_GLFW=OFF -DBUILD_OSPRAY_CI_EXTRAS=ON -DBUILD_OIDN=ON

build-arch-clang-devel:
  <<: *build_job_docker
  script:
    - export CC=clang
    - export CXX=clang++
    - scripts/build_gitlab/linux.sh -G Ninja -DBUILD_GLFW=OFF -DBUILD_OSPRAY_CI_EXTRAS=ON -DBUILD_EMBREE_FROM_SOURCE=ON -DBUILD_EMBREE_VERSION=devel -DBUILD_OIDN=ON -DBUILD_OIDN_FROM_SOURCE=ON -DBUILD_OIDN_VERSION=devel -DBUILD_OPENVKL_VERSION=devel -DBUILD_RKCOMMON_VERSION=devel 
  only: [schedules]

build-ubuntu1604-gcc:
  <<: *build_job_docker
  image: $DOCKER_REGISTRY/ospray/docker-images:ubuntu16.04
  script:
    - scripts/build_gitlab/linux.sh -G Ninja
  <<: *build_artifacts

build-ubuntu1804-gcc:
  <<: *build_job_docker
  image: $DOCKER_REGISTRY/ospray/docker-images:ubuntu18.04
  script:
    - scripts/build_gitlab/linux.sh -G Ninja -DBUILD_GLFW=OFF
  <<: *build_artifacts

build-ubuntu2004-gcc:
  <<: *build_job_docker
  image: $DOCKER_REGISTRY/ospray/docker-images:ubuntu20.04
  script:
    - scripts/build_gitlab/linux.sh -G Ninja -DBUILD_GLFW=OFF
  <<: *build_artifacts

build-centos8:
  <<: *build_job_docker
  image: $DOCKER_REGISTRY/ospray/docker-images:centos8
  script:
    - scripts/build_gitlab/linux.sh -G Ninja
  <<: *build_artifacts

build-centos7-icc:
  <<: *build_job_docker_modules
  script:
    - module load cmake
    - module load intel
    - export CC=icc
    - export CXX=icpc
    - scripts/build_gitlab/linux.sh

build-centos7-icc15:
  <<: *build_job_docker_modules
  script:
    - module load cmake
    - module load intel/2015
    - export CC=icc
    - export CXX=icpc
    - scripts/build_gitlab/linux.sh

build-centos7-gcc:
  <<: *build_job_docker
  image: $DOCKER_REGISTRY/ospray/docker-images:centos7
  <<: *build_artifacts

build-centos7-mpi:
  <<: *build_job_docker_modules
  script:
    - module load cmake
    - module load intel
    - scripts/build_gitlab/linux.sh -DBUILD_OSPRAY_MODULE_MPI=ON
  allow_failure: true

build-centos7-mpi-devel:
  <<: *build_job_docker_modules
  script:
    - module load cmake
    - module load intel
    - scripts/build_gitlab/linux.sh -DBUILD_OSPRAY_MODULE_MPI=ON -DBUILD_OSPRAY_MODULE_MPI_VERSION=devel
  allow_failure: true

build-debug:
  <<: *build_job_docker
  script:
    - scripts/build_gitlab/linux.sh -G Ninja -DBUILD_GLFW=OFF -DCMAKE_BUILD_TYPE=Debug

build-osx-clang:
  <<: *build_job_shell
  script:
    - scripts/build_gitlab/macosx.sh
  tags:
    - osx
    - clang

build-windows-msvc14:
  <<: *build_job_shell
  script:
    - scripts\build_gitlab\win.ps1 "Visual Studio 14 2015 Win64" "v140"
  tags:
    - msvc14
    - win
  <<: *build_artifacts

build-windows-msvc15:
  <<: *build_job_shell
  script:
    - scripts\build_gitlab\win.ps1 "Visual Studio 15 2017 Win64" "v141"
  tags:
    - msvc15
    - win
  <<: *build_artifacts

#build-windows-icc:
#  <<: *build_job_shell
#  script:
#    - scripts\build_gitlab\win.ps1 "Visual Studio 14 2015 Win64" "Intel C++ Compiler 17.0"
#  tags:
#    - icc17
#    - win
#  <<: *build_artifacts

build-scan-kw:
  stage: build
  image: $DOCKER_REGISTRY/ospray/docker-images:centos7
  script:
    - scripts/build_gitlab/build-scan-kw.sh
    - test -s $CI_PROJECT_DIR/kw_build_number
  tags:
    - docker
  artifacts:
    paths:
        - $CI_PROJECT_DIR/kw_build_number
    expire_in: 3 day

source-protex-scan:
  stage: build
  image: $DOCKER_REGISTRY/ospray/docker-images:centos7
  script:
    - scripts/build_gitlab/source-scan-protex.sh
  dependencies: []
  tags: [docker]
  allow_failure: true


### TEST JOBS ###

test-centos7-gcc:
  <<: *test_job_unix
  image: $DOCKER_REGISTRY/ospray/docker-images:centos7
  dependencies:
    - build-centos7-gcc

test-centos8:
  <<: *test_job_unix
  image: $DOCKER_REGISTRY/ospray/docker-images:centos8
  dependencies:
    - build-centos8

test-ubuntu1604-gcc:
  <<: *test_job_unix
  image: $DOCKER_REGISTRY/ospray/docker-images:ubuntu16.04
  dependencies:
    - build-ubuntu1604-gcc

test-ubuntu1804-gcc:
  <<: *test_job_unix
  image: $DOCKER_REGISTRY/ospray/docker-images:ubuntu18.04
  dependencies:
    - build-ubuntu1804-gcc

test-ubuntu2004-gcc:
  <<: *test_job_unix
  image: $DOCKER_REGISTRY/ospray/docker-images:ubuntu20.04
  dependencies:
    - build-ubuntu2004-gcc

test-tutorials:
  stage: test-build
  tags:
    - docker
  image: $DOCKER_REGISTRY/ospray/docker-images:centos7
  script:
    - scripts/tests/run_tutorials.sh
  dependencies:
    - build-centos7-gcc
  allow_failure: true

test-find-ospray:
  stage: test-build
  tags:
    - docker
    - modules
  image: $DOCKER_REGISTRY/ospray/docker-images:centos7-mod
  script:
    - module load cmake
    - mkdir buildtut
    - cd buildtut
    - cmake -D ospray_DIR=`echo $CI_PROJECT_DIR/build/install/ospray/lib/cmake/ospray-*` ../apps/ospTutorial/ospTutorialFindospray 
    - cmake --build .
  dependencies:
    - build-centos7-gcc

#test-windows-icc:
#  <<: *test_job_windows
#  tags:
#    - win
#    - icc
#  dependencies:
#    - build-windows-icc

test-windows-msvc15:
  <<: *test_job_windows
  tags:
    - win
    - msvc15
  dependencies:
    - build-windows-msvc15

test-windows-msvc14:
  <<: *test_job_windows
  tags:
    - win
    - msvc14
  dependencies:
    - build-windows-msvc14

test-kw-critical:
  stage: test-src
  image: $DOCKER_REGISTRY/ospray/docker-images:centos7
  script:
    - scripts/build_gitlab/test-kw-critical.sh
  needs:
    - build-scan-kw
  tags:
    - docker
  allow_failure: true

generate-ci-baseline:
  <<: *test_job_unix
  image: $DOCKER_REGISTRY/ospray/docker-images:ubuntu18.04
  script:
    - LD_LIBRARY_PATH="$CI_PROJECT_DIR/build/install/ospray/lib:$LD_LIBRARY_PATH" PATH="$CI_PROJECT_DIR/build/install/ospray/bin:$PATH" scripts/tests/generate_baseline.sh
  dependencies:
    - build-ubuntu1804-gcc
  artifacts:
    paths:
      - generated_test_images
    expire_in: 3 day
  when: manual


### Documentation ###

.job_template: &doc-defaults
  stage: build
  tags:
    - docker
  image: $DOCKER_REGISTRY/ospray/docker-images:docu
  variables:
    GIT_SUBMODULE_STRATEGY: normal

pdf:
  <<: *doc-defaults
  script:
    - cd doc
    - make pdf
  artifacts:
    paths:
      - readme.pdf
    expire_in: 1 week

web:
  <<: *doc-defaults
  script:
    - cd doc
    - make www
  artifacts:
    paths:
      - doc/www/*
    expire_in: 1 week


### RELEASE JOBS ###

release-linux:
  <<: *release_job
  image: $DOCKER_REGISTRY/ospray/docker-images:centos7-mod
  script:
    - module load cmake
    - scripts/release/linux.sh
  tags:
    - modules
  artifacts:
    paths:
      - build_release/*.gz

release-osx-clang:
  <<: *release_job
  script:
    - export CC=clang
    - export CXX=clang++
    - scripts/release/macosx.sh
    - $SIGN_FILE_MAC -o runtime -e scripts/release/ospray.entitlements build_release/ospray-*
    - scripts/release/macosx_notarization.sh build_release/ospray-*.pkg
  tags:
    - clang
    - osx
  artifacts:
    paths:
      - build_release/*.zip
      - build_release/*.pkg

release-windows:
  <<: *release_job
  script:
    - scripts\release\win.ps1 "Visual Studio 14 2015 Win64"
    - ;& $env:SIGN_FILE_WINDOWS ospray*.msi
  tags:
    - msvc14
    - win
  artifacts:
    paths:
      - build_release\ospray*.zip
      - build_release\ospray*.msi
